"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5474],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(f,o(o({ref:n},d),{},{components:t})):r.createElement(f,o({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6210:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>c,toc:()=>d,default:()=>u});var r=t(3117),i=t(102),a=(t(7294),t(3905)),o=["components"],l={id:"build",title:"build command"},s=void 0,c={unversionedId:"references/cli/build",id:"references/cli/build",title:"build command",description:"Command tramvai build can build libraries to separate bundles for various environments:",source:"@site/tmp-docs/references/cli/build.md",sourceDirName:"references/cli",slug:"/references/cli/build",permalink:"/docs/references/cli/build",editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/cli/build.md",tags:[],version:"current",frontMatter:{id:"build",title:"build command"},sidebar:"docs",previous:{title:"start command",permalink:"/docs/references/cli/start"},next:{title:"analyze command",permalink:"/docs/references/cli/analyze"}},d=[],p={toc:d};function u(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Command ",(0,a.kt)("inlineCode",{parentName:"p"},"tramvai build")," can build libraries to separate bundles for various environments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CommonJS modules + ES2015 code (for nodejs without ESM support) - it uses field ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")),(0,a.kt)("li",{parentName:"ul"},"ES modules + ES2015 code (for nodejs with ESM support) - it uses filed ",(0,a.kt)("inlineCode",{parentName:"li"},"module")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")),(0,a.kt)("li",{parentName:"ul"},"ES modules + ES5 code (for legacy browser) - it uses field ",(0,a.kt)("inlineCode",{parentName:"li"},"browser")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")),(0,a.kt)("li",{parentName:"ul"},"ES modules + ES2017+ code (for modern browsers) - it uses field ",(0,a.kt)("inlineCode",{parentName:"li"},"es2017")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json"))),(0,a.kt)("p",null,"To specify new library in ",(0,a.kt)("inlineCode",{parentName:"p"},"tramvai.json")," add new project with the type ",(0,a.kt)("inlineCode",{parentName:"p"},"package"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "projects": {\n    "{{packageName}}": {\n      "name": "{{packageName}}",\n      "type": "package",\n      "root": "libs/{{packageName}}"\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Any additional settings should be specified in the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," of the library itself:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "{{packageName}}",\n  "version": "1.0.0",\n  "source": "src/index.ts", // entry point to library\n  "browserSource": "src/browser.ts", // optional field, entry point for the browser environment. Can be used to split implementations for server and browser\n  "main": "dist/index.js", // name of the built CommonJS + ES2015 bundle\n  "module": "dist/index.es.js", // name of the built ESM + ES2015 bundle\n  "browser": "dist/browser.js", // optional field, name of the built + ES2015 bundle, should be used with the field `browserSource`\n  "es2017": "dist/browser.es2017.js", // optional field, name of the built ESM + ES2017 bundle. It it is omitted calculates from the `source` field\n  "sideEffects": false,\n  "scripts": {\n    "start": "tramvai build {{packageName}} --watch", // watch mode to develop package\n    "build": "tramvai build {{packageName}}" // single time build for the production\n  }\n}\n')))}u.isMDXComponent=!0}}]);