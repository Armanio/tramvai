(self.webpackChunk=self.webpackChunk||[]).push([[3610],{3905:(e,t,r)=>{"use strict";r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||c;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<c;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},44:(e,t,r)=>{"use strict";r.r(t),r.d(t,{frontMatter:()=>s,contentTitle:()=>i,metadata:()=>p,toc:()=>l,default:()=>m});var n=r(2122),o=r(9756),c=(r(7294),r(3905)),a=["components"],s={id:"test-mocks",title:"Mocks"},i=void 0,p={unversionedId:"references/test/test-mocks",id:"references/test/test-mocks",isDocsHomePage:!1,title:"Mocks",description:"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u043a\u043e\u0432 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 tramvai-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439",source:"@site/tmp-docs/references/test/test-mocks.md",sourceDirName:"references/test",slug:"/references/test/test-mocks",permalink:"/docs/references/test/test-mocks",editUrl:"https://github.com/TinkoffCreditSystems/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/test/test-mocks.md",version:"current",frontMatter:{id:"test-mocks",title:"Mocks"},sidebar:"docs",previous:{title:"Puppeteer tests",permalink:"/docs/references/test/test-puppeteer"},next:{title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 jest",permalink:"/docs/references/test/test-integration-jest"}},l=[{value:"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",id:"\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",children:[]},{value:"Api",id:"api",children:[{value:"STORE_TOKEN",id:"store_token",children:[]},{value:"DI",id:"di",children:[]},{value:"Context",id:"context",children:[]},{value:"Router",id:"router",children:[]}]}],u={toc:l};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u043a\u043e\u0432 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 tramvai-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439"),(0,c.kt)("h2",{id:"\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"},"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save-dev @tramvai/test-mocks\n")),(0,c.kt)("h2",{id:"api"},"Api"),(0,c.kt)("h3",{id:"store_token"},"STORE_TOKEN"),(0,c.kt)("p",null,"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u043a \u0434\u043b\u044f \u0442\u043e\u043a\u0435\u043d\u0430 STORE_TOKEN \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 \u043a\u0430\u043a \u043e\u0431\u0449\u0435\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0432\u0441\u0435\u0445 \u0441\u0442\u043e\u0440\u043e\u0432"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createMockStore } from '@tramvai/test-mocks';\n\nconst store = createMockStore();\nconst state = store.getState();\n\nstore.dispatch('event');\n")),(0,c.kt)("h3",{id:"di"},"DI"),(0,c.kt)("p",null,"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 Di-Container"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createMockDi } from '@tramvai/test-mocks';\n\nconst di = createMockDi();\n\nconst dep = di.get(SOME_TOKEN);\n")),(0,c.kt)("h3",{id:"context"},"Context"),(0,c.kt)("p",null,"\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 CONTEXT_TOKEN"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createMockContext } from '@tramvai/test-mocks';\n\nit('test', async () => {\n  const context = createMockContext();\n\n  await context.dispatch('event');\n  await context.executeAction(action);\n\n  const spyExecuteAction = jest.spyOn(context, 'executeAction');\n\n  expect(spyExecuteAction).toHaveBeenCalled();\n});\n")),(0,c.kt)("h3",{id:"router"},"Router"),(0,c.kt)("p",null,"\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u043e\u043a \u0434\u043b\u044f \u0438\u043d\u0441\u0442\u0430\u043d\u0441\u0430 ",(0,c.kt)("inlineCode",{parentName:"p"},"@tinkoff/router")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { createMockRouter } from '@tramvai/test-mocks';\n\ndescribe('test', () => {\n  it('should create router mock', () => {\n    const router = createMockRouter();\n\n    expect(router.getCurrentRoute()).toMatchObject({ path: '/' });\n    expect(router.getCurrentUrl()).toMatchObject({ path: '/' });\n  });\n\n  it('should allow to specify currentRoute', () => {\n    const router = createMockRouter({ currentRoute: { name: 'page', path: '/page/test/' } });\n\n    expect(router.getCurrentRoute()).toMatchObject({ path: '/page/test/' });\n    expect(router.getCurrentUrl()).toMatchObject({ path: '/page/test/' });\n  });\n});\n")))}m.isMDXComponent=!0}}]);