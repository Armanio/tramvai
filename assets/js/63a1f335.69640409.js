"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1474],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8612:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>l,contentTitle:()=>c,metadata:()=>d,toc:()=>s,default:()=>p});var n=t(3117),o=t(102),a=(t(7294),t(3905)),i=["components"],l={id:"module",title:"module"},c=void 0,d={unversionedId:"references/tramvai/module",id:"references/tramvai/module",title:"module",description:"Module - Decorator for configuring and creating a module.",source:"@site/tmp-docs/references/tramvai/module.md",sourceDirName:"references/tramvai",slug:"/references/tramvai/module",permalink:"/docs/references/tramvai/module",editUrl:"https://github.com/Tinkoff/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/tramvai/module.md",tags:[],version:"current",frontMatter:{id:"module",title:"module"},sidebar:"docs",previous:{title:"createAction",permalink:"/docs/references/tramvai/create-action"},next:{title:"autoscroll",permalink:"/docs/references/modules/autoscroll"}},s=[{value:"@Module({ providers, deps, imports })(class)",id:"module-providers-deps-imports-class",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2}],u={toc:s};function p(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Module")," - Decorator for configuring and creating a module."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/module"},"Read more about modules")),(0,a.kt)("h2",{id:"module-providers-deps-imports-class"},"@Module({ providers, deps, imports })(class)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"providers")," - ",(0,a.kt)("a",{parentName:"li",href:"/docs/concepts/provider"},"Providers"),", which will be added to the root DI container and become available in other modules"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"deps")," - List of dependencies from the DI container, necessary to initialize the module"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"imports")," - A list of modules from which providers will be obtained and added to the DI. Allows you to create modules that combine many other modules")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Module, provide } from '@tramvai/core';\n\n@Module({\n  providers: [\n    provide({\n      provide: 'token',\n      useValue: 'value-in-token',\n    }),\n  ],\n  deps: {\n    logger: 'logger',\n  },\n  imports: [ModuleLogger],\n})\nclass ModulePubSub {\n  constructor({ logger }) {\n    logger.info('Module create');\n  }\n}\n")))}p.isMDXComponent=!0}}]);