import { createBundle, createAction } from '@tramvai/core';
import { lazy } from '@tramvai/react';

export const bundleServerOnlyAction = createAction({
  name: 'bundle-server-action',
  fn: (context, payload) => {
    console.log('Executed once on the server');
  },
  conditions: {
    onlyServer: true,
  },
});

export const bundleClientOnlyAction = createAction({
  name: 'bundle-client-action',
  fn: (context, payload) => {
    console.log('Executed once per client');
  },
  conditions: {
    onlyBrowser: true,
  },
});

export default createBundle({
  name: 'mainDefault',
  components: {
    // register a page component that will be used for all pages to which this bundle is attached, by default
    pageDefault: lazy(() => import('pages/main')),
    // register a page component that will be used with the appropriate route settings
    '{{configEntry.name}}/second': lazy(() => import('pages/second')),
  },
  // register actions that will be executed for all pages to which this bundle is attached
  actions: [bundleServerOnlyAction, bundleClientOnlyAction],
});
