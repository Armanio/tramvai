(self.webpackChunk=self.webpackChunk||[]).push([[7674],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>m,kt:()=>l});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),p=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),f=p(n),l=o,g=f["".concat(a,".").concat(l)]||f[l]||u[l]||i;return n?r.createElement(g,s(s({ref:t},m),{},{components:n})):r.createElement(g,s({ref:t},m))}));function l(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7822:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>c,contentTitle:()=>a,metadata:()=>p,toc:()=>m,default:()=>f});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),s=["components"],c={id:"metrics-tokens",title:"metrics-tokens"},a=void 0,p={unversionedId:"references/tokens/metrics-tokens",id:"references/tokens/metrics-tokens",isDocsHomePage:!1,title:"metrics-tokens",description:"\u041c\u043e\u0434\u0443\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0442\u043e\u043a\u0435\u043d\u044b \u0442\u0440\u0430\u043c\u0432\u0430\u044f \u0434\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0443\u043b\u044f \u043c\u0435\u0442\u0440\u0438\u043a.",source:"@site/tmp-docs/references/tokens/metrics-tokens.md",sourceDirName:"references/tokens",slug:"/references/tokens/metrics-tokens",permalink:"/en/docs/references/tokens/metrics-tokens",editUrl:"https://github.com/TinkoffCreditSystems/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/references/tokens/metrics-tokens.md",version:"current",frontMatter:{id:"metrics-tokens",title:"metrics-tokens"},sidebar:"docs",previous:{title:"common-tokens",permalink:"/en/docs/references/tokens/common-tokens"},next:{title:"server-tokens",permalink:"/en/docs/references/tokens/server-tokens"}},m=[{value:"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432",id:"\u0441\u043f\u0438\u0441\u043e\u043a-\u0442\u043e\u043a\u0435\u043d\u043e\u0432",children:[]}],u={toc:m};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u041c\u043e\u0434\u0443\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0442\u043e\u043a\u0435\u043d\u044b \u0442\u0440\u0430\u043c\u0432\u0430\u044f \u0434\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0443\u043b\u044f ",(0,i.kt)("a",{parentName:"p",href:"/en/docs/references/modules/metrics"},"\u043c\u0435\u0442\u0440\u0438\u043a"),"."),(0,i.kt)("h2",{id:"\u0441\u043f\u0438\u0441\u043e\u043a-\u0442\u043e\u043a\u0435\u043d\u043e\u0432"},"\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432"),(0,i.kt)("p",null,(0,i.kt)("pre",{parentName:"p"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createToken } from '@tinkoff/dippy';\nimport type {\n  Counter,\n  CounterConfiguration,\n  Gauge,\n  GaugeConfiguration,\n  Histogram,\n  HistogramConfiguration,\n  Summary,\n  SummaryConfiguration,\n} from 'prom-client';\n\ninterface Metrics {\n  counter<T extends string = string>(opt: CounterConfiguration<T>): Counter<T>;\n  gauge<T extends string = string>(opt: GaugeConfiguration<T>): Gauge<T>;\n  histogram<T extends string = string>(opt: HistogramConfiguration<T>): Histogram<T>;\n  summary<T extends string = string>(opt: SummaryConfiguration<T>): Summary<T>;\n}\n\nexport { Counter, Gauge, Histogram, Summary, Metrics };\n\n/**\n * @description\n * \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0443\u043b\u044f \u043c\u0435\u0442\u0440\u0438\u043a\n */\nexport const METRICS_MODULE_TOKEN = createToken<Metrics>('metricsModule');\n\nexport interface MetricsServicesRegistryInterface {\n  register(url: string, serviceName: string): void;\n  registerEnv(env: Record<string, unknown>): void;\n  getServiceName(url: string): string | void;\n}\n\n/**\n * @description\n * \u0423\u0442\u0438\u043b\u0438\u0442\u0430 \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044e \u043c\u0435\u0442\u0440\u0438\u043a \u043a\u0430\u043a\u043e\u0435 \u0438\u043c\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n */\nexport const METRICS_SERVICES_REGISTRY_TOKEN = createToken<MetricsServicesRegistryInterface>(\n  'metricsServicesRegistry'\n);\n\n/**\n * @description\n * \u0422\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 counter-\u043c\u0435\u0442\u0440\u0438\u043a \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0442\u0435\u043c \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u043d\u043a\u0442\u0435\u0440\u0435\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 POST\n * \u0437\u0430\u043f\u0440\u043e\u0441 papi \u0440\u043e\u0443\u0442\u0430\n */\nexport const REGISTER_INSTANT_METRIC_TOKEN = createToken<[string, Counter<string>]>(\n  'registerInstantMetric'\n);\n\n"))))}f.isMDXComponent=!0}}]);