(self.webpackChunk=self.webpackChunk||[]).push([[7524],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4058:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>p,metadata:()=>c,toc:()=>l,default:()=>u});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={id:"app-structure",title:"Project structure"},p=void 0,c={unversionedId:"get-started/app-structure",id:"get-started/app-structure",isDocsHomePage:!1,title:"Project structure",description:"A quick overview of the structure of the application that generates by tramvai new command.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/get-started/app-structure.md",sourceDirName:"get-started",slug:"/get-started/app-structure",permalink:"/en/docs/get-started/app-structure",editUrl:"https://github.com/TinkoffCreditSystems/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/get-started/app-structure.md",version:"current",frontMatter:{id:"app-structure",title:"Project structure"},sidebar:"docs",previous:{title:"\u0421reate an application on tramvai",permalink:"/en/docs/get-started/create-app"},next:{title:"Required modules",permalink:"/en/docs/get-started/core-modules"}},l=[{value:"Repository type",id:"repository-type",children:[]},{value:"Blocks",id:"blocks",children:[]},{value:"Additional links",id:"additional-links",children:[]}],d={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A quick overview of the structure of the application that generates by tramvai ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," command.\nAt the same time, we support both mono-repositories and repositories with one application.\nRepository type, package manager and CI settings are selected when the command ",(0,a.kt)("inlineCode",{parentName:"p"},"new")," executed."),(0,a.kt)("h3",{id:"repository-type"},"Repository type"),(0,a.kt)("h4",{id:"multirepo"},"Multirepo"),(0,a.kt)("p",null,"The repository structure is designed for one application"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"root-directory\n\u251c\u2500\u2500 package.json - description of project dependencies\n\u251c\u2500\u2500 tramvai.json - project configuration for `@tramvai/cli`\n\u251c\u2500\u2500 env.development.js - environment variables used for local builds of the project\n\u251c\u2500\u2500 renovate.json - settings for renovatebot, which automatically creates MR in projects when there are fresh major dependency updates\n\u251c\u2500\u2500 README.md - project documentation\n\u2514\u2500\u2500 src - application code directory\n    \u2514\u2500\u2500 ...App block\n")),(0,a.kt)("h4",{id:"monorepo"},"Monorepo"),(0,a.kt)("p",null,"The repository structure is designed for the presence of several applications, and separate shared libraries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"root-directory\n\u251c\u2500\u2500 package.json - description of project dependencies\n\u251c\u2500\u2500 tramvai.json - project configuration for `@tramvai/cli`\n\u251c\u2500\u2500 env.development.js - environment variables used for local builds of the project\n\u251c\u2500\u2500 renovate.json - settings for renovatebot, which automatically creates MR in projects when there are fresh major dependency updates\n\u251c\u2500\u2500 README.md - project documentation\n\u251c\u2500\u2500 apps - directory with applications\n\u2502   \u251c\u2500\u2500 App block\n\u2502   \u251c\u2500\u2500 App block\n\u2514\u2500\u2500 packages - a directory with various libraries / modules that will be shared between applications\n    \u251c\u2500\u2500 Lib block\n    \u2514\u2500\u2500 Lib block\n")),(0,a.kt)("h3",{id:"blocks"},"Blocks"),(0,a.kt)("h4",{id:"application"},"Application"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"app-directory\n\u251c\u2500\u2500 index.ts - application entry point\n\u251c\u2500\u2500 vendor.ts - description of the vendor application dependencies (react and react-dom by default)\n\u251c\u2500\u2500 polyfill.ts - polyfills used by the application (absent by default)\n\u251c\u2500\u2500 postcss.js - basic set of postcss settings \n\u251c\u2500\u2500 bundles - list of connected bundles in the application\n\u251c\u2500\u2500 components - directory with used components by the application\n\u2502   \u251c\u2500\u2500 features - feature components\n\u2502   \u2514\u2500\u2500 shared - shared components\n\u251c\u2500\u2500 layers\n\u2502   \u251c\u2500\u2500 layout - global wrappers used in routing\n\u2502   \u251c\u2500\u2500 pages - page components that are used in routing\n\u251c\u2500\u2500 modules - custom modules written for the application (absent by default)\n\u2514\u2500\u2500 reducers - global reducers, events and selectors (absent by default)\n")),(0,a.kt)("h3",{id:"additional-links"},"Additional links"),(0,a.kt)("p",null,"The following links provide detailed definitions of terms ",(0,a.kt)("inlineCode",{parentName:"p"},"bundle"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"module")," and a description of the settings ",(0,a.kt)("inlineCode",{parentName:"p"},"tramvai.json")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/en/docs/concepts/module"},"Module")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/en/docs/concepts/bundle"},"Bundle")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/en/docs/references/cli/base"},"Tramvai CLI settings"))))}u.isMDXComponent=!0}}]);