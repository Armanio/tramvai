(self.webpackChunk=self.webpackChunk||[]).push([[1926],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,v=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(v,i(i({ref:t},l),{},{components:n})):r.createElement(v,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3466:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>c,metadata:()=>u,toc:()=>l,default:()=>m});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={id:"tramvai-integration",title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 tramvai"},c=void 0,u={unversionedId:"features/state/tramvai-integration",id:"features/state/tramvai-integration",isDocsHomePage:!1,title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 tramvai",description:"\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0442\u0440\u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438:",source:"@site/tmp-docs/features/state/tramvai-integration.md",sourceDirName:"features/state",slug:"/features/state/tramvai-integration",permalink:"/en/docs/features/state/tramvai-integration",editUrl:"https://github.com/TinkoffCreditSystems/tramvai/-/edit/master/docs/get-started/overview.md/tmp-docs/features/state/tramvai-integration.md",version:"current",frontMatter:{id:"tramvai-integration",title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 tramvai"},sidebar:"docs",previous:{title:"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435",permalink:"/en/docs/features/state/overview"},next:{title:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u0434\u044c\u044e\u0441\u0435\u0440\u0430",permalink:"/en/docs/features/state/create-reducer"}},l=[{value:"\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b",id:"\u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b",children:[{value:"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f",id:"\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f",children:[]},{value:"\u0427\u0442\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f",id:"\u0447\u0442\u0435\u043d\u0438\u0435-\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f",children:[]},{value:"\u041f\u043e\u0434\u043f\u0438\u0441\u043a\u0430",id:"\u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0430",children:[]}]},{value:"\u042d\u043a\u0448\u0435\u043d\u044b",id:"\u044d\u043a\u0448\u0435\u043d\u044b",children:[]}],p={toc:l};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0442\u0440\u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"),(0,o.kt)("li",{parentName:"ul"},"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435"),(0,o.kt)("li",{parentName:"ul"},"\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f")),(0,o.kt)("p",null,"\u041f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c \u0432 ",(0,o.kt)("inlineCode",{parentName:"p"},"React")," \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445, ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/state")," \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u044b\u0435 \u0445\u0443\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0432 \u0434\u043e\u043a\u0435 ",(0,o.kt)("a",{parentName:"p",href:"/en/docs/features/state/hooks"},"\u0425\u0443\u043a\u0438 \u0434\u043b\u044f React"),".\n\u041d\u043e, \u0432 ",(0,o.kt)("inlineCode",{parentName:"p"},"tramvai")," \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u0435\u0441\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c - ",(0,o.kt)("inlineCode",{parentName:"p"},"\u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b")," \u0438 ",(0,o.kt)("inlineCode",{parentName:"p"},"\u044d\u043a\u0448\u0435\u043d\u044b"),"."),(0,o.kt)("h2",{id:"\u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b"},"\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b"),(0,o.kt)("p",null,"\u041c\u043e\u0434\u0443\u043b\u044c ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/module-common")," \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 ",(0,o.kt)("inlineCode",{parentName:"p"},"StateModule"),", \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u0435\u043b\u0430\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 ",(0,o.kt)("inlineCode",{parentName:"p"},"STORE_TOKEN"),",\n\u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0449\u0438\u0439 \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0435\u0439\u0442\u043e\u043c:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type Store = {\n  dispatch(event);\n  subscribe(listener);\n  subscribe(reducer, listener);\n  getState();\n  getState(reducer);\n}\n")),(0,o.kt)("h3",{id:"\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435-\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f"},"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f"),(0,o.kt)("p",null,"\u041c\u0435\u0442\u043e\u0434 ",(0,o.kt)("inlineCode",{parentName:"p"},"store.dispatch()")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { commandLineListTokens } from '@tramvai/core';\nimport { createEvent, createReducer } from '@tramvai/state';\nimport { STORE_TOKEN } from '@tramvai/tokens-common';\n\nconst incEvent = createEvent('inc');\nconst countReducer = createReducer('count', 0).on(inc, (state) => state + 1);\n\nconst provider = {\n  provide: commandLineListTokens.resolveUserDeps,\n  multi: true,\n  useFactory: ({ store }) => {\n    return function updateCountReducer() {\n      store.dispatch(incEvent());\n    };\n  },\n  deps: {\n    store: STORE_TOKEN,\n  },\n}\n")),(0,o.kt)("h3",{id:"\u0447\u0442\u0435\u043d\u0438\u0435-\u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f"},"\u0427\u0442\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f"),(0,o.kt)("p",null,"\u041c\u0435\u0442\u043e\u0434 ",(0,o.kt)("inlineCode",{parentName:"p"},"store.getState()")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u0449\u0435\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f, \u0438\u043b\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0434\u044c\u044e\u0441\u0435\u0440\u0430."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ",(0,o.kt)("inlineCode",{parentName:"p"},"store.getState(reducer)")," \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0442\u043e\u0440\u043e\u0432 -\n\u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0441\u0442\u043e\u0440 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0438\u043b\u0438 \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0443\u043b\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 ",(0,o.kt)("inlineCode",{parentName:"p"},"const { storeName = defaultValue } = store.getState()"))),(0,o.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { commandLineListTokens } from '@tramvai/core';\nimport { createEvent, createReducer } from '@tramvai/state';\nimport { STORE_TOKEN } from '@tramvai/tokens-common';\n\nconst userReducer = createReducer('user', {});\n\nconst provider = {\n  provide: commandLineListTokens.resolveUserDeps,\n  multi: true,\n  useFactory: ({ store }) => {\n    return function readUserState() {\n      // { user: {} } - \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u0441\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\n      const state = store.getState();\n      // user: {} - \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0434\u044c\u044e\u0441\u0435\u0440\u0430\n      const user = store.getState(userReducer);\n    };\n  },\n  deps: {\n    store: STORE_TOKEN,\n  },\n}\n")),(0,o.kt)("h3",{id:"\u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0430"},"\u041f\u043e\u0434\u043f\u0438\u0441\u043a\u0430"),(0,o.kt)("p",null,"\u041c\u0435\u0442\u043e\u0434 ",(0,o.kt)("inlineCode",{parentName:"p"},"store.subscribe()")," \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { commandLineListTokens } from '@tramvai/core';\nimport { createEvent, createReducer } from '@tramvai/state';\nimport { STORE_TOKEN } from '@tramvai/tokens-common';\n\nconst incEvent = createEvent('inc');\nconst countReducer = createReducer('count', 0).on(inc, (state) => state + 1);\n\nconst provider = {\n  provide: commandLineListTokens.resolveUserDeps,\n  multi: true,\n  useFactory: ({ store }) => {\n    return function listenCountState() {\n      let currentState = store.getState(countReducer);\n\n      const unsubscribe = store.subscribe((nextGlobalState) => {\n        const nextState = store.getState(countReducer);\n\n        if (currentState !== nextState) {\n          console.log('count reducer state is:', currentState);\n          currentState = nextState;\n        }\n      });\n\n      setInterval(() => {\n        store.dispatch(incEvent());\n      }, 1000);\n    };\n  },\n  deps: {\n    store: STORE_TOKEN,\n  },\n}\n")),(0,o.kt)("p",null,"\u0418\u043b\u0438 \u0434\u043b\u044f \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0434\u044c\u044e\u0441\u0435\u0440\u0430:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { commandLineListTokens } from '@tramvai/core';\nimport { createEvent, createReducer } from '@tramvai/state';\nimport { STORE_TOKEN } from '@tramvai/tokens-common';\n\nconst incEvent = createEvent('inc');\nconst countReducer = createReducer('count', 0).on(inc, (state) => state + 1);\n\nconst provider = {\n  provide: commandLineListTokens.resolveUserDeps,\n  multi: true,\n  useFactory: ({ store }) => {\n    return function listenCountState() {\n      const unsubscribe = store.subscribe(countReducer, (nextState) => {\n        console.log('count reducer state is:', nextState);\n      });\n\n      setInterval(() => {\n        store.dispatch(incEvent());\n      }, 1000);\n    };\n  },\n  deps: {\n    store: STORE_TOKEN,\n  },\n}\n")),(0,o.kt)("h2",{id:"\u044d\u043a\u0448\u0435\u043d\u044b"},"\u042d\u043a\u0448\u0435\u043d\u044b"),(0,o.kt)("p",null,"\u041c\u043e\u0434\u0443\u043b\u044c ",(0,o.kt)("inlineCode",{parentName:"p"},"@tramvai/module-common")," \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 ",(0,o.kt)("inlineCode",{parentName:"p"},"CONTEXT_TOKEN"),", \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043c\u0438\u043c\u043e \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c (\u043f\u043e\u0434 \u043a\u0430\u043f\u043e\u0442\u043e\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f ",(0,o.kt)("inlineCode",{parentName:"p"},"STORE_TOKEN"),"), \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u044d\u043a\u0448\u0435\u043d\u044b:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type ConsumerContext = {\n  executeAction(action, payload);\n  dispatch(event);\n  subscribe(listener);\n  getState();\n  getState(reducer);\n}\n")),(0,o.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { createAction } from '@tramvai/core';\nimport { createEvent, createReducer } from '@tramvai/state';\n\nconst loadUser = createEvent('load user');\nconst userReducer = createReducer('user', { name: 'anonymus' });\n\nuserReducer.on(loadUser, (state, payload) => payload);\n\nconst fetchUserAction = createAction({\n  name: 'fetchUser',\n  fn: async (context, payload, { httpClient }) => {\n    \n    const { name } = context.getState(userReducer);\n    \n    if (name !== 'anonymus') {\n      return;\n    }\n    \n    const response = await httpClient.get('/user');\n    \n    context.dispatch(loadUser(response.payload));\n  },\n  deps: {\n    httpClient: HTTP_CLIENT,\n  },\n});\n")))}m.isMDXComponent=!0}}]);